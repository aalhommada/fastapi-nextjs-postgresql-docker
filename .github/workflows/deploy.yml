name: Zero-Downtime Deploy to DigitalOcean

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Zero-Downtime Deploy to DigitalOcean Droplet
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: 165.232.86.188
        username: root
        password: ${{ secrets.DROPLET_PASSWORD }}
        script: |
          # Navigate to app directory
          cd /opt/app/fastapi-nextjs-postgresql-docker
          
          # Pull latest changes from GitHub
          echo "🔄 Pulling latest changes..."
          git pull origin main
          
          # Zero-downtime deployment strategy
          echo "� Starting zero-downtime deployment..."
          
          # Build new images without stopping services
          echo "🔨 Building new images..."
          docker-compose build --no-cache
          
          # Scale up with new version (creates new containers alongside old ones)
          echo "� Scaling up with new version..."
          docker-compose up -d --scale backend=2 --no-recreate
          
          # Wait for new containers to be healthy
          echo "⏳ Waiting for new containers to be healthy..."
          sleep 30
          
          # Check if new containers are healthy
          if docker-compose ps | grep -q "healthy"; then
            echo "✅ New containers are healthy"
            
            # Remove old containers (keeps newest ones)
            echo "🔄 Removing old containers..."
            docker-compose up -d --scale backend=1 --remove-orphans
            
            # Clean up old images
            echo "🧹 Cleaning up old images..."
            docker image prune -f
            
            echo "🎉 Zero-downtime deployment completed successfully!"
          else
            echo "❌ New containers are not healthy, rolling back..."
            docker-compose down
            docker-compose up -d
          fi
          
          # Final status check
          echo "📊 Final status check..."
          docker-compose ps
          
          echo "🔗 API available at: http://165.232.86.188:8000"
          echo "📋 API docs: http://165.232.86.188:8000/docs"
